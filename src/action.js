import fs from 'fs';
import buildContent from './build_content.js';
import createApi from './api.js';
import { readFile, writeFile } from './fs_util.js';
import { pick } from './util.js';

export default async function(options) {
    options.logger ||= { debug() {} };

    const api = createApi(options.client, pick(options,
        { guruEndpoint: 'endpoint' },
        'userEmail',
        'userToken',
        'logger'
    ));

    const content = await buildContent(options.filePath, {
        ...pick(options,
            { footer: 'cardFooter' },
            { defaultFooter: 'defaultCardFooter' },
            'repositoryUrl'
        ),
        api
    });

    let existingCard = null;
    let cardId = null;

    if(fs.existsSync(options.cardsFile)) {
        cardId = JSON.parse(await readFile(options.cardsFile))[0];
    }

    if(cardId) {
        existingCard = await api.getCard(cardId);
    }

    if(existingCard && !existingCard.archived) {
        await api.updateCard(existingCard.id, {
            ...existingCard,
            content
        });
    }
    else {
        const { id } = await api.createCard({
            title: options.cardTitle,
            collectionId: options.collectionId,
            boardId: options.boardId,
            sectionId: options.boardSectionId,
            content
        });

        await writeFile(options.cardsFile, JSON.stringify([id]));

        await options.commitCardsFile({
            path: options.cardsFile,
            email: 'noreply@actengage.com',
            name: 'theguru Action Bot',
            message: 'Update card id\n\nUpdate the workflow file with the new card id.\n\nThis commit was auto-generated by theguru action and likely occurred because a new card was created in Guru.'
        });
    }
}